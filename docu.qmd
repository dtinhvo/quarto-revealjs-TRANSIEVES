---
title: "Documentation"
footer: "Tinh Vo, @Event "
author: 
  name: Tinh Vo
  affiliation: Technische Universit√§t Darmstadt
date: last-modified
date-format: "DD MMM, YYYY"
format: 
  tvo_TRANSIEVES-revealjs:
    center-title-slide: false
    # center: false
filters: 
  - reveal-header
slide-level: 3
number-sections: false

---

# Sample section, in reality this would be Background or Motivation

## Incremental slides , also let's say that this section is really long so that the next h3 will include it all for sizing

::: {.incremental}
- Step 1
- Step 2
:::
Only list items are incremented

Reddit--comment-style sparse for linebreak  
And `\ \ ` for hard newline


. . .

or with 3 dots , like ". . ."


. . . 

Outside of `.incremental`, list items must have empty lines above `. . .  `

### Subsubsection

This is a check for persistent header: h2 should be on upper right  
h3 is not considered as a header

## Columns
:::: {.columns}

only split col inside `::: {.column}   :::` 

Collumn size with `width=` - WARNING! `style="width: 40%"` is NOT correct!

::: {.column  width="40%"}
Left column
:::

::: {.column width="60%"}
Right column
:::

::::

Codeblock col-template for your copying pleasure:
```
:::: {.columns}

::: {.column .col-border-right width="50%" style="font-size: 50%;"}
:::

::: {.column width="50%" style="font-size: 50%;"}
:::

::::
``` 

## Content alignment

::: {style="text-align:center"}
There is only one option known to work, `style="text-align:center"` or put `text-align:center` into style block
:::

## Photo management
with `[Caption](/path/to/image.png)`

<!-- TODO  -->
- [ ] [layout / positioning](https://quarto.org/docs/presentations/revealjs/advanced.html#absolute-position): 
  - Positioning : a verbose example  
    `{.absolute top=200 left=0 width="350" height="300"}`, vice versa
- [ ] fading, direction
- [Overlaying](https://quarto.org/docs/presentations/revealjs/advanced.html#stack-layout)
  - `::: {.r-stack} ` into `![](image.png){.fragment}` <!-- I suppose overlay is just no fragment -->
- Vertical stretch-to-fill
  - Enable: `{.r-stretch}`
  - Disable: `{.nostretch}`


## Formatting 

Apply into `{style="key:value;"}` or `.smaller`  
Applicable `{key}`s    

    - font-size: {#}%; // This is parsed as pseudo code - commonmark issue



::: {.panel-tabset}

### Some useful properties
`.scollable` scroll long code  
`.fragment` delay display until next arrow cmd

### Some useless functionalities

- Tabs : `::: {.panel-tabset} :::` , with ### being each tab
:::

## Highlighting with nested fragments
For a text:  

::: {.fragment }
Normal fragment are its own line/block , wrapped in `.fragment`
:::


:::: {.inline-fragment}
But if you want to do it inline, 

::: {.fragment fragment-index=3}
use `:::: {.inline-fragment}` (4x:) *in addition*, wrapping the block. 
:::
::: {.fragment .smaller fragment-index=2}
this was hacked with css 
:::
:::: 

For irregular order, add `fragment-index=`

::: {.fragment }
indexed fragments will show first by defaul ie. cannot intercept ordering implicitly
:::

For an equation: 
$$
  x =
\class{fragment}{{} x(x+1) + 1(x+1)}
$$
Use `\class{fragment}{ ... }` , but ordering appearance here is impossible 


## Citations 
Citation with footnotes ^[Referencing 1.] via:  

::: aside
pre-footer eg. citation with `:aside:`, above `^[]` citations:
:::


## Python embed
:::: {.columns}

::: {.column width="60%" style="font-size: 80%;"}
::: {.incremental}
Render code with "{.code}" eg. `{.python}`

- Highlight lines `code-line-numbers=`, *no spaces!*
- Incremental highlights with `|` separation
- Leave the entire block highlighted with `|` at start
- eg. `{.python code-line-numbers="7,9|10"}`

```{.python .code-overflow-wrap .smaller code-line-numbers="|7,9|10" }
#| label: fig-1
#| fig-cap: "Demo plot name"
#| echo: true
#| output-location: column

import numpy as np
import matplotlib.pyplot as plt

r = np.arange(0, 2, 0.01)
theta = 2 * np.pi * r
fig, ax = plt.subplots(  subplot_kw = {'projection': 'polar'} )
ax.plot(theta, r);ax.set_rticks([0.5, 1, 1.5, 2]); ax.grid(True) ; plt.show()
```
tagalong css styles with `style="key:value;"`  
code wrapping does not work (yet)


:::

:::

::: {.column width="40%" }
```{python }
#| label: fig-1
#| fig-cap: "Demo plot name"

import numpy as np
import matplotlib.pyplot as plt

r = np.arange(0, 2, 0.01)
theta = 2 * np.pi * r
fig, ax = plt.subplots(  subplot_kw = {'projection': 'polar'} )
ax.plot(theta, r);ax.set_rticks([0.5, 1, 1.5, 2]); ax.grid(True) ; plt.show()
```
(see forced squashing)
Code should be separate from source items, size adjustment & other formatting likely


:::
Or to dump the plot to next slide (no heading), use 
```
#| echo: true
#| output-location: column
```
::::



## Python embed 2 {style="font-size: 0.7em;"}

To really echo true source,  use output options:

- fragment
- slide
- column
- column-fragment (just  a combi)


```{python }
#| label: fig-2
#| fig-cap: "Source-echoed plot"
#| echo: true
#| output-location: column


import numpy as np
import matplotlib.pyplot as plt

r = np.arange(0, 2, 0.01)
theta = 2 * np.pi * r
fig, ax = plt.subplots(  subplot_kw = {'projection': 'polar'} 
,figsize=(3,3)) # this for size 
ax.plot(theta, r);
ax.set_rticks([0.5, 1, 1.5, 2]); 
ax.grid(True) ; plt.show()
```

## Python embed 3
<!-- TODO -->
- [ ] ggplotly
- [ ] 3D: https://github.com/bwlewis/rthreejs
- [ ] webGL: http://cran.at.r-project.org/web/packages/rglwidget/index.html

## Presenting anims
- Zoom: Alt + Click (or Ctrl + Click on Linux)
- Speaker view: press s
- Click the hamburger menu or press m 1
- Black out: press b
- Code anim: with `## {auto-animate=true}` between 2 codeblocks

## Menu for chapters
TODO https://github.com/Martinomagnifico/quarto-simplemenu?tab=readme-ov-file

## Separating slides
<!-- TODO main file scheme ala. main.qmd? or chapters go to ./chapters/_#.qmd-->
<!-- Commented out bc code can be embedded as include -->

```

<!-- {{< include /path/to/_file.qmd >}} -->

```  
Subfiles **MUST** start with a `_`

## Automation
<!-- TODO -->
 
- [ ] Add blank slides: 
  - [ ] parse largest file number: use max() in bash
  - [ ] touch a qmd with max+1
  - [ ] include that filename to clipboard

## TODO - md basics are different
https://quarto.org/docs/authoring/markdown-basics.html
